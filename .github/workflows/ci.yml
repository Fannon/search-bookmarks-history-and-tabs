name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22.x'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm set cache ~/.npm && npm ci
      - name: Build
        run: npm run build
      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: popup
          path: popup
          if-no-files-found: error

  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm set cache ~/.npm && npm ci
      - name: Run Unit Tests
        run: npm run test:unit -- --coverage
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-report
          path: reports/
          retention-days: 30

  playwright-test:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: popup
          path: popup
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm set cache ~/.npm && npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Test Chromium
        run: npm run test:e2e:chromium
      - name: Test Firefox
        run: npm run test:e2e:firefox
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: reports/playwright/
          retention-days: 30

  # resolve-playwright-version:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version: ${{ steps['resolve-playwright-version'].outputs.version }}
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: resolve-playwright-version
  #       id: resolve-playwright-version
  #       run: |
  #         version="$(yq -r '.devDependencies["@playwright/test"] // ""' package.json)"
  #         version="${version#^}"
  #         test -n "$version" || { echo "No @playwright/test version found in package.json"; exit 1; }
  #         echo "version=$version" >> "$GITHUB_OUTPUT"
  # playwright:
  #   name: 'Playwright Tests'
  #   runs-on: ubuntu-latest
  #   needs: resolve-playwright-version
  #   container:
  #     image: mcr.microsoft.com/playwright:v${{ needs['resolve-playwright-version'].outputs.version }}-noble
  #     options: --user 1001
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Test Chromium
  #       run: npm run test:e2e:chromium
  #     - name: Test Firefox
  #       run: npm run test:e2e:firefox
